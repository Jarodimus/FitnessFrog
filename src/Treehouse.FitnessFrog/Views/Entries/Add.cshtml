@model Treehouse.FitnessFrog.Models.Entry
@using Treehouse.FitnessFrog.Models

@{
    ViewBag.Title = "Add Entry";

    <!-- selected list items manually generated -->
    //var selectListItems = new[]
    //{
    //    new SelectListItem(){ Value = "1", Text = "Item 1", Selected = false },
    //    new SelectListItem(){ Value = "2", Text = "Item 2", Selected = false }
    //};

     <!-- selected list items manually generated -->
    //var items = new[]
    //{
    //    new { Id = 1, Name = "Item 1" },
    //    new { Id = 1, Name = "Item 1" }
    //};
    //var selectListItems = new SelectList(items, "Id", "Name");
}
<!-- Manually created select list used without HTML helpers -->
@*<select>
    <option value="1">Item 1</option>
    <option value="2" selected>Item 2</option>
</select>*@

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    <div class="row">

        <div class="col-md-6">

            @{ 
                var formattedDate = String.Format("{0:d}", Model.Date);
            }

            <div class="form-group">
                <!-- 'm' in the anonymous function refers to the model and so the parameter
                    it's returning (the Date property of the Entry object) is passed to the LabelFor HTML
                    helper method-->
                @Html.LabelFor(m => m.Date, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Date, "{0:d}", new { @class = "form-control" })
                @*<label for="Date" class="control-label">Date</label>
                <input type="text" id="Date" name="Date" class="form-control" value="@ViewBag.date" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ActivityId, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.ActivityId, (SelectList) ViewBag.ActivitiesSelectListItems, "", new {  @class = "form-control"})
                @*@Html.TextBoxFor(m => m.ActivityId, new { @class = "form-control" })*@

                @*@Html.Label("ActivityId", new { @class = "control-label" })
                @Html.TextBox("ActivityId", null, new { @class = "form-control" })*@
                @*<label for="ActivityId" class="control-label">Activity</label>
        <input type="text" id="ActivityId" name="ActivityId" class="form-control" value="@ViewBag.activityId" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Duration, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })

                @*@Html.Label("Duration", new { @class = "control-label" })
                @Html.TextBox("Duration", null, new { @class = "form-control" })*@
                @*<label for="Duration" class="control-label">Duration</label>
        <input type="text" id="Duration" name="Duration" class="form-control" value="@ViewBag.duration" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Intensity, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Low) @Entry.IntensityLevel.Low
                    </label>
                    <label class="radio-inline"> 
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Medium) @Entry.IntensityLevel.Medium
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.High) @Entry.IntensityLevel.High
                    </label>
                    
                    @*@Html.RadioButtonFor(m => m.Intensity, "Low") Low
        @Html.RadioButtonFor(m => m.Intensity, "Medium") Medium
        @Html.RadioButtonFor(m => m.Intensity, "High") High*@
                </div>
                @*@Html.TextBoxFor(m => m.Intensity, new { @class = "form-control" })*@

                @*@Html.Label("Intensity", new { @class = "control-label" })
                @Html.TextBox("Intensity", null, new { @class = "form-control" })*@
                @*<label for="Intensity" class="control-label">Intensity</label>
        <input type="text" id="Intensity" name="Intensity" class="form-control" value="@ViewBag.intensity" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Exclude, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Exclude, new { @class = "form-control" })

                @*@Html.Label("Exclude", new { @class = "control-label" })
                @Html.TextBox("Exclude", null, new { @class = "form-control" })*@
                @*<label for="Exclude" class="control-label">Exclude</label>
        <input type="text" id="Exclude" name="Exclude" class="form-control" value="@(ViewBag.exclude != null ? ViewBag.exclude.ToString() : "")" />*@
            </div>

        </div>

        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(m => m.Notes, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Notes, 14, 20, new { @class = "form-control" })
                @*<label for="Notes" class="control-label">Notes</label>
                <textarea id="Notes" name="Notes" class="form-control" rows="14" cols="20">@ViewBag.notes</textarea>*@
            </div>

        </div>

        <div class="col-md-12">
            <div class="pad-top">
                <button type="submit" class="btn btn-success btn-lg margin-right">
                    <span class="glyphicon glyphicon-save"></span> Save
                </button>
                <a href="@Url.Action("Index")" class="btn btn-warning btn-lg">
                    <span class="glyphicon glyphicon-remove"></span> Cancel
                </a>
            </div>
        </div>

    </div>
}
